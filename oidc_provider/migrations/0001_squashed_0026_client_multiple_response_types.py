# Generated by Django 5.1.2 on 2024-11-05 01:54

import datetime
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


# oidc_provider.migrations.0026_client_multiple_response_types
def migrate_response_type(apps, schema_editor):
    RESPONSE_TYPES = [
        ("code", "code (Authorization Code Flow)"),
        ("id_token", "id_token (Implicit Flow)"),
        ("id_token token", "id_token token (Implicit Flow)"),
        ("code token", "code token (Hybrid Flow)"),
        ("code id_token", "code id_token (Hybrid Flow)"),
        ("code id_token token", "code id_token token (Hybrid Flow)"),
    ]
    # ensure we get proper, versioned model with the deleted response_type field;
    # importing directly yields the latest without response_type
    ResponseType = apps.get_model("oidc_provider", "ResponseType")
    Client = apps.get_model("oidc_provider", "Client")
    db = schema_editor.connection.alias
    for value, description in RESPONSE_TYPES:
        ResponseType.objects.using(db).create(value=value, description=description)
    for client in Client.objects.using(db).all():
        client.response_types.add(
            ResponseType.objects.using(db).get(value=client.response_type)
        )


class Migration(migrations.Migration):
    replaces = [
        ("oidc_provider", "0001_initial"),
        ("oidc_provider", "0002_userconsent"),
        ("oidc_provider", "0003_code_nonce"),
        ("oidc_provider", "0004_remove_userinfo"),
        ("oidc_provider", "0005_token_refresh_token"),
        ("oidc_provider", "0006_unique_user_client"),
        ("oidc_provider", "0007_auto_20160111_1844"),
        ("oidc_provider", "0008_rsakey"),
        ("oidc_provider", "0009_auto_20160202_1945"),
        ("oidc_provider", "0010_code_is_authentication"),
        ("oidc_provider", "0011_client_client_type"),
        ("oidc_provider", "0012_auto_20160405_2041"),
        ("oidc_provider", "0013_auto_20160407_1912"),
        ("oidc_provider", "0014_client_jwt_alg"),
        ("oidc_provider", "0015_change_client_code"),
        ("oidc_provider", "0016_userconsent_and_verbosenames"),
        ("oidc_provider", "0017_auto_20160811_1954"),
        ("oidc_provider", "0018_hybridflow_and_clientattrs"),
        ("oidc_provider", "0019_auto_20161005_1552"),
        ("oidc_provider", "0020_client__post_logout_redirect_uris"),
        ("oidc_provider", "0021_refresh_token_not_unique"),
        ("oidc_provider", "0022_auto_20170331_1626"),
        ("oidc_provider", "0023_client_owner"),
        ("oidc_provider", "0024_auto_20180327_1959"),
        ("oidc_provider", "0025_user_field_codetoken"),
        ("oidc_provider", "0026_client_multiple_response_types"),
    ]

    initial = True

    dependencies = [
        ("auth", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Client",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(default="", max_length=100, verbose_name="Name"),
                ),
                (
                    "client_id",
                    models.CharField(
                        max_length=255, unique=True, verbose_name="Client ID"
                    ),
                ),
                (
                    "client_secret",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Client SECRET"
                    ),
                ),
                (
                    "response_type",
                    models.CharField(
                        choices=[
                            ("code", "code (Authorization Code Flow)"),
                            ("id_token", "id_token (Implicit Flow)"),
                            ("id_token token", "id_token token (Implicit Flow)"),
                            ("code token", "code token (Hybrid Flow)"),
                            ("code id_token", "code id_token (Hybrid Flow)"),
                            (
                                "code id_token token",
                                "code id_token token (Hybrid Flow)",
                            ),
                        ],
                        max_length=30,
                        verbose_name="Response Type",
                    ),
                ),
                (
                    "_redirect_uris",
                    models.TextField(
                        default="",
                        help_text="Enter each URI on a new line.",
                        verbose_name="Redirect URIs",
                    ),
                ),
                (
                    "date_created",
                    models.DateField(auto_now_add=True, verbose_name="Date Created"),
                ),
                (
                    "client_type",
                    models.CharField(
                        choices=[
                            ("confidential", "Confidential"),
                            ("public", "Public"),
                        ],
                        default="confidential",
                        help_text="<b>Confidential</b> clients are capable of maintaining the confidentiality of their credentials. <b>Public</b> clients are incapable.",
                        max_length=30,
                        verbose_name="Client Type",
                    ),
                ),
                (
                    "jwt_alg",
                    models.CharField(
                        choices=[("HS256", "HS256"), ("RS256", "RS256")],
                        default="RS256",
                        help_text="Algorithm used to encode ID Tokens.",
                        max_length=10,
                        verbose_name="JWT Algorithm",
                    ),
                ),
                (
                    "contact_email",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        verbose_name="Contact Email",
                    ),
                ),
                (
                    "logo",
                    models.FileField(
                        blank=True,
                        default="",
                        upload_to="oidc_provider/clients",
                        verbose_name="Logo Image",
                    ),
                ),
                (
                    "terms_url",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="External reference to the privacy policy of the client.",
                        max_length=255,
                        verbose_name="Terms URL",
                    ),
                ),
                (
                    "website_url",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        verbose_name="Website URL",
                    ),
                ),
                (
                    "_post_logout_redirect_uris",
                    models.TextField(
                        blank=True,
                        default="",
                        help_text="Enter each URI on a new line.",
                        verbose_name="Post Logout Redirect URIs",
                    ),
                ),
                (
                    "require_consent",
                    models.BooleanField(
                        default=True,
                        help_text="If disabled, the Server will NEVER ask the user for consent.",
                        verbose_name="Require Consent?",
                    ),
                ),
                (
                    "reuse_consent",
                    models.BooleanField(
                        default=True,
                        help_text="If enabled, server will save the user consent given to a specific client, so that user won't be prompted for the same authorization multiple times.",
                        verbose_name="Reuse Consent?",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="oidc_clients_set",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Owner",
                    ),
                ),
                (
                    "_scope",
                    models.TextField(
                        blank=True,
                        default="",
                        help_text="Specifies the authorized scope values for the client app.",
                        verbose_name="Scopes",
                    ),
                ),
            ],
            options={
                "verbose_name": "Client",
                "verbose_name_plural": "Clients",
            },
        ),
        migrations.CreateModel(
            name="Token",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("expires_at", models.DateTimeField(verbose_name="Expiration Date")),
                ("_scope", models.TextField(default="", verbose_name="Scopes")),
                (
                    "access_token",
                    models.CharField(
                        max_length=255, unique=True, verbose_name="Access Token"
                    ),
                ),
                ("_id_token", models.TextField(verbose_name="ID Token")),
                (
                    "client",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="oidc_provider.client",
                        verbose_name="Client",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
                (
                    "refresh_token",
                    models.CharField(
                        default="",
                        max_length=255,
                        unique=True,
                        verbose_name="Refresh Token",
                    ),
                ),
            ],
            options={
                "abstract": False,
                "verbose_name": "Token",
                "verbose_name_plural": "Tokens",
            },
        ),
        migrations.CreateModel(
            name="UserConsent",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("expires_at", models.DateTimeField(verbose_name="Expiration Date")),
                ("_scope", models.TextField(default="", verbose_name="Scopes")),
                (
                    "client",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="oidc_provider.client",
                        verbose_name="Client",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
                (
                    "date_given",
                    models.DateTimeField(
                        default=datetime.datetime(
                            2016,
                            6,
                            10,
                            17,
                            53,
                            48,
                            889808,
                            tzinfo=datetime.timezone.utc,
                        ),
                        verbose_name="Date Given",
                    ),
                ),
            ],
            options={
                "abstract": False,
                "unique_together": {("user", "client")},
            },
        ),
        migrations.CreateModel(
            name="Code",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("expires_at", models.DateTimeField(verbose_name="Expiration Date")),
                ("_scope", models.TextField(default="", verbose_name="Scopes")),
                (
                    "code",
                    models.CharField(max_length=255, unique=True, verbose_name="Code"),
                ),
                (
                    "client",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="oidc_provider.client",
                        verbose_name="Client",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
                (
                    "nonce",
                    models.CharField(
                        blank=True, default="", max_length=255, verbose_name="Nonce"
                    ),
                ),
                (
                    "is_authentication",
                    models.BooleanField(
                        default=False, verbose_name="Is Authentication?"
                    ),
                ),
                (
                    "code_challenge",
                    models.CharField(
                        max_length=255, null=True, verbose_name="Code Challenge"
                    ),
                ),
                (
                    "code_challenge_method",
                    models.CharField(
                        max_length=255, null=True, verbose_name="Code Challenge Method"
                    ),
                ),
            ],
            options={
                "abstract": False,
                "verbose_name": "Authorization Code",
                "verbose_name_plural": "Authorization Codes",
            },
        ),
        migrations.CreateModel(
            name="RSAKey",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "key",
                    models.TextField(
                        help_text="Paste your private RSA Key here.", verbose_name="Key"
                    ),
                ),
            ],
            options={
                "verbose_name": "RSA Key",
                "verbose_name_plural": "RSA Keys",
            },
        ),
        migrations.CreateModel(
            name="ResponseType",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "value",
                    models.CharField(
                        choices=[
                            ("code", "code (Authorization Code Flow)"),
                            ("id_token", "id_token (Implicit Flow)"),
                            ("id_token token", "id_token token (Implicit Flow)"),
                            ("code token", "code token (Hybrid Flow)"),
                            ("code id_token", "code id_token (Hybrid Flow)"),
                            (
                                "code id_token token",
                                "code id_token token (Hybrid Flow)",
                            ),
                        ],
                        max_length=30,
                        unique=True,
                        verbose_name="Response Type Value",
                    ),
                ),
                ("description", models.CharField(max_length=50)),
            ],
        ),
        migrations.AddField(
            model_name="client",
            name="response_types",
            field=models.ManyToManyField(to="oidc_provider.responsetype"),
        ),
        migrations.RunPython(
            code=migrate_response_type,
        ),
        migrations.RemoveField(
            model_name="client",
            name="response_type",
        ),
    ]
